apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: "info.solidsoft.pitest"

repositories {
    mavenCentral()
}

ext {
    springBootVersion = "3.0.1"
    postgresVersion = "42.5.3"
    flywayVersion = "9.14.1"
    hsqldbVersion = "2.7.1"
    commonDbcpVersion = "2.9.0"
}

dependencies {

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testCompileOnly("org.springframework:spring-test")
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation("org.springframework.boot:spring-boot-starter-test:3.0.1")

    testImplementation("org.mockito:mockito-core:5.0.0")
    testImplementation("org.mockito:mockito-junit-jupiter:5.0.0")

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
//        html.enabled true
//        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
}


sonarqube {

    properties {
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.login", "6fcedd98a82d683292668d5f84fb4b1153d44877"
        property "sonar.coverage.jacoco.xmlReportPaths", "./build/reports/jacoco/report.xml"
    }

}

pitest {
    junit5PluginVersion = '1.1.2'
    threads = 4
    pitestVersion = "1.10.4"
    failWhenNoMutations = false
    targetClasses = ["org.sam.mines.*"]
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    timeoutConstInMillis = 6000
    excludedTestClasses = ['*.*Config']
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += "--enable-preview"
}
tasks.withType(Test).configureEach {
    jvmArgs += "--enable-preview"
}
tasks.withType(JavaExec).configureEach {
    jvmArgs += "--enable-preview"
}
